import sys

BASE = 10
number = int(input('Введите натуральное число: '))
reverse = 0

while number > 0:
    reverse = reverse * BASE + number % BASE
    number //= BASE
    # print(sys.getsizeof(number), sys.getsizeof(reverse))
print(f'Обратное число: {reverse}')

sum_mem = sys.getsizeof(number) + sys.getsizeof(reverse) + sys.getsizeof(BASE) + 4
print(f'Занимаемой памяти в байтах: {sum_mem}')

"""
Рассматриваем number = sys.maxsize — "максимальное" число в Python (на самом деле можно вводить и большие числа)
Обратное число: 7085774586302733229
Занимаемой памяти в байтах: 92
 
Благодаря выводу занимаемой памяти в цикле, было установлено, что суммарно переменные занимают памяти не более,
чем память_исходного_числа + память_обратного_числа + память_основания + 4 байта
4 байта сверху возникают из-за того, что для некоторых введённых чисел возникает ситуация,
когда исходное число без одного разряда продолжает занимать столько же памяти, сколько и исходное:
0 шаг: max + 24(reverse = 0) + 28(BASE = 10)
1 шаг: max + 28 + 28
...
"""